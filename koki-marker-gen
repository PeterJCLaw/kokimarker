#!/usr/bin/env python
import cairo
import getopt
import kokimarker
import sys

def mm_to_in(x):
    return x * 0.0393700787

def mm_to_pt(x):
    return 72 * mm_to_in(x)

if len(sys.argv) < 3:
    print "Usage: ./markergen.py [--4up] [--desc val] <code> <output_prefix>"
    sys.exit(1)

optlist, args = getopt.getopt(sys.argv[1:], '', ['4up', 'desc='])

if len(args) != 2:
    print "Usage: ./markergen.py [--4up] [--desc val] <code> <output_prefix>"
    sys.exit(1)

CODE = int(args[0])
OUTFNAME = "%s-%i.pdf" % (args[1], CODE)

FOURUP = False
DESC = ""

# check for options
for opt in optlist:

    if opt[0] == "--4up":
        FOURUP = True

    elif opt[0] == "--desc":
        DESC = opt[1]

surface = cairo.PDFSurface(OUTFNAME, mm_to_pt(210), mm_to_pt(297) )
cr = cairo.Context(surface)

# Scale it up to mm-scale:
cr.scale( mm_to_pt(1), mm_to_pt(1) )

if not FOURUP:

    marker = kokimarker.Marker( CODE )
    
    marker.render( surface, mm_to_pt(100),
                  mm_to_pt((210 - 100) / 2),
                  mm_to_pt((297 - 100) / 2), DESC)


else:
    for x in [ (5,10), (105,10), (5,110), (105,110) ]:

        marker = kokimarker.Marker( CODE )

        marker.render( surface, mm_to_pt(100),
                      mm_to_pt((210 - 100) / 2),
                      mm_to_pt((297 - 100) / 2), DESC)

surface.finish()
